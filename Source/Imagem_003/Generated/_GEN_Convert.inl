		case imDF::DF_L_8u:
			switch(tf){
				case imDF::DF_L_16u: 	return convert((r_8u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((r_8u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((r_8u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((r_8u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((r_8u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((r_8u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((r_8u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((r_8u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((r_8u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((r_8u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((r_8u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((r_8u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((r_8u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((r_8u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((r_8u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((r_8u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((r_8u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((r_8u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((r_8u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((r_8u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((r_8u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((r_8u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((r_8u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((r_8u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((r_8u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((r_8u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((r_8u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((r_8u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((r_8u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((r_8u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((r_8u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((r_8u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((r_8u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((r_8u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((r_8u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((r_8u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((r_8u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((r_8u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((r_8u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((r_8u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((r_8u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((r_8u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((r_8u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((r_8u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((r_8u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((r_8u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((r_8u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((r_8u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((r_8u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((r_8u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((r_8u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((r_8u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((r_8u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((r_8u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((r_8u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((r_8u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((r_8u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((r_8u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((r_8u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((r_8u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((r_8u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_L_16u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((r_16u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((r_16u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((r_16u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((r_16u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((r_16u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((r_16u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((r_16u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((r_16u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((r_16u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((r_16u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((r_16u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((r_16u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((r_16u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((r_16u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((r_16u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((r_16u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((r_16u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((r_16u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((r_16u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((r_16u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((r_16u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((r_16u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((r_16u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((r_16u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((r_16u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((r_16u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((r_16u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((r_16u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((r_16u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((r_16u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((r_16u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((r_16u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((r_16u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((r_16u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((r_16u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((r_16u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((r_16u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((r_16u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((r_16u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((r_16u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((r_16u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((r_16u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((r_16u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((r_16u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((r_16u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((r_16u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((r_16u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((r_16u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((r_16u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((r_16u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((r_16u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((r_16u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((r_16u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((r_16u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((r_16u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((r_16u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((r_16u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((r_16u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((r_16u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((r_16u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((r_16u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_L_16f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((r_16f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((r_16f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((r_16f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((r_16f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((r_16f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((r_16f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((r_16f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((r_16f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((r_16f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((r_16f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((r_16f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((r_16f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((r_16f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((r_16f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((r_16f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((r_16f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((r_16f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((r_16f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((r_16f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((r_16f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((r_16f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((r_16f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((r_16f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((r_16f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((r_16f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((r_16f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((r_16f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((r_16f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((r_16f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((r_16f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((r_16f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((r_16f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((r_16f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((r_16f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((r_16f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((r_16f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((r_16f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((r_16f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((r_16f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((r_16f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((r_16f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((r_16f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((r_16f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((r_16f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((r_16f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((r_16f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((r_16f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((r_16f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((r_16f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((r_16f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((r_16f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((r_16f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((r_16f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((r_16f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((r_16f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((r_16f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((r_16f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((r_16f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((r_16f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((r_16f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((r_16f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_L_32u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((r_32u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((r_32u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((r_32u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((r_32u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((r_32u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((r_32u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((r_32u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((r_32u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((r_32u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((r_32u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((r_32u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((r_32u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((r_32u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((r_32u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((r_32u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((r_32u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((r_32u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((r_32u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((r_32u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((r_32u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((r_32u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((r_32u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((r_32u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((r_32u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((r_32u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((r_32u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((r_32u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((r_32u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((r_32u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((r_32u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((r_32u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((r_32u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((r_32u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((r_32u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((r_32u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((r_32u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((r_32u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((r_32u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((r_32u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((r_32u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((r_32u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((r_32u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((r_32u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((r_32u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((r_32u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((r_32u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((r_32u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((r_32u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((r_32u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((r_32u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((r_32u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((r_32u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((r_32u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((r_32u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((r_32u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((r_32u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((r_32u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((r_32u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((r_32u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((r_32u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((r_32u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_L_32f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((r_32f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((r_32f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((r_32f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((r_32f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((r_32f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((r_32f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((r_32f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((r_32f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((r_32f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((r_32f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((r_32f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((r_32f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((r_32f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((r_32f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((r_32f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((r_32f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((r_32f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((r_32f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((r_32f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((r_32f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((r_32f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((r_32f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((r_32f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((r_32f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((r_32f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((r_32f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((r_32f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((r_32f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((r_32f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((r_32f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((r_32f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((r_32f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((r_32f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((r_32f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((r_32f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((r_32f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((r_32f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((r_32f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((r_32f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((r_32f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((r_32f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((r_32f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((r_32f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((r_32f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((r_32f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((r_32f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((r_32f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((r_32f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((r_32f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((r_32f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((r_32f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((r_32f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((r_32f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((r_32f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((r_32f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((r_32f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((r_32f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((r_32f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((r_32f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((r_32f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((r_32f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_LA_8u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rg_8u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rg_8u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rg_8u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rg_8u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rg_8u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rg_8u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rg_8u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rg_8u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rg_8u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rg_8u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rg_8u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rg_8u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rg_8u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rg_8u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rg_8u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rg_8u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rg_8u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rg_8u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rg_8u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rg_8u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rg_8u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rg_8u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rg_8u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rg_8u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rg_8u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rg_8u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rg_8u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rg_8u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rg_8u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rg_8u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rg_8u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rg_8u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rg_8u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rg_8u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rg_8u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rg_8u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rg_8u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rg_8u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rg_8u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rg_8u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rg_8u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rg_8u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rg_8u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rg_8u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rg_8u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rg_8u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rg_8u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rg_8u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rg_8u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rg_8u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rg_8u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rg_8u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rg_8u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rg_8u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rg_8u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rg_8u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rg_8u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rg_8u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rg_8u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rg_8u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rg_8u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_LA_16u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rg_16u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rg_16u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rg_16u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rg_16u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rg_16u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rg_16u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rg_16u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rg_16u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rg_16u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rg_16u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rg_16u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rg_16u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rg_16u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rg_16u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rg_16u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rg_16u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rg_16u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rg_16u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rg_16u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rg_16u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rg_16u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rg_16u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rg_16u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rg_16u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rg_16u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rg_16u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rg_16u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rg_16u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rg_16u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rg_16u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rg_16u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rg_16u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rg_16u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rg_16u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rg_16u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rg_16u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rg_16u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rg_16u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rg_16u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rg_16u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rg_16u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rg_16u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rg_16u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rg_16u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rg_16u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rg_16u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rg_16u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rg_16u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rg_16u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rg_16u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rg_16u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rg_16u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rg_16u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rg_16u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rg_16u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rg_16u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rg_16u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rg_16u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rg_16u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rg_16u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rg_16u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_LA_16f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rg_16f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rg_16f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rg_16f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rg_16f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rg_16f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rg_16f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rg_16f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rg_16f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rg_16f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rg_16f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rg_16f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rg_16f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rg_16f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rg_16f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rg_16f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rg_16f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rg_16f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rg_16f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rg_16f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rg_16f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rg_16f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rg_16f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rg_16f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rg_16f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rg_16f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rg_16f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rg_16f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rg_16f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rg_16f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rg_16f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rg_16f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rg_16f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rg_16f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rg_16f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rg_16f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rg_16f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rg_16f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rg_16f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rg_16f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rg_16f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rg_16f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rg_16f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rg_16f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rg_16f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rg_16f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rg_16f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rg_16f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rg_16f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rg_16f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rg_16f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rg_16f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rg_16f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rg_16f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rg_16f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rg_16f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rg_16f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rg_16f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rg_16f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rg_16f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rg_16f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rg_16f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_LA_32u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rg_32u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rg_32u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rg_32u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rg_32u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rg_32u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rg_32u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rg_32u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rg_32u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rg_32u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rg_32u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rg_32u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rg_32u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rg_32u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rg_32u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rg_32u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rg_32u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rg_32u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rg_32u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rg_32u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rg_32u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rg_32u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rg_32u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rg_32u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rg_32u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rg_32u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rg_32u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rg_32u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rg_32u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rg_32u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rg_32u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rg_32u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rg_32u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rg_32u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rg_32u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rg_32u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rg_32u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rg_32u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rg_32u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rg_32u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rg_32u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rg_32u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rg_32u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rg_32u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rg_32u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rg_32u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rg_32u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rg_32u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rg_32u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rg_32u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rg_32u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rg_32u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rg_32u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rg_32u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rg_32u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rg_32u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rg_32u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rg_32u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rg_32u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rg_32u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rg_32u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rg_32u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_LA_32f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rg_32f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rg_32f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rg_32f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rg_32f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rg_32f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rg_32f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rg_32f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rg_32f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rg_32f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rg_32f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rg_32f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rg_32f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rg_32f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rg_32f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rg_32f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rg_32f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rg_32f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rg_32f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rg_32f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rg_32f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rg_32f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rg_32f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rg_32f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rg_32f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rg_32f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rg_32f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rg_32f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rg_32f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rg_32f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rg_32f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rg_32f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rg_32f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rg_32f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rg_32f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rg_32f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rg_32f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rg_32f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rg_32f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rg_32f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rg_32f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rg_32f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rg_32f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rg_32f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rg_32f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rg_32f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rg_32f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rg_32f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rg_32f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rg_32f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rg_32f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rg_32f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rg_32f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rg_32f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rg_32f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rg_32f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rg_32f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rg_32f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rg_32f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rg_32f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rg_32f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rg_32f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGB_8u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgb_8u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgb_8u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgb_8u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgb_8u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgb_8u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgb_8u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgb_8u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgb_8u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgb_8u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgb_8u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgb_8u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgb_8u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgb_8u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgb_8u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgb_8u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgb_8u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgb_8u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgb_8u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgb_8u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgb_8u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgb_8u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgb_8u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgb_8u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgb_8u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgb_8u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgb_8u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgb_8u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgb_8u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgb_8u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgb_8u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgb_8u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgb_8u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgb_8u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgb_8u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgb_8u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgb_8u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgb_8u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgb_8u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgb_8u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgb_8u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgb_8u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgb_8u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgb_8u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgb_8u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgb_8u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgb_8u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgb_8u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgb_8u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgb_8u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgb_8u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgb_8u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgb_8u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgb_8u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgb_8u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgb_8u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgb_8u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgb_8u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgb_8u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgb_8u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgb_8u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgb_8u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGR_8u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgr_8u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgr_8u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgr_8u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgr_8u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgr_8u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgr_8u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgr_8u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgr_8u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgr_8u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgr_8u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgr_8u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgr_8u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgr_8u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgr_8u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgr_8u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgr_8u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgr_8u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgr_8u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgr_8u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgr_8u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgr_8u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgr_8u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgr_8u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgr_8u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgr_8u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgr_8u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgr_8u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgr_8u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgr_8u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgr_8u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgr_8u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgr_8u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgr_8u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgr_8u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgr_8u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgr_8u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgr_8u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgr_8u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgr_8u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgr_8u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgr_8u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgr_8u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgr_8u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgr_8u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgr_8u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgr_8u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgr_8u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgr_8u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgr_8u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgr_8u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgr_8u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgr_8u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgr_8u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgr_8u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgr_8u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgr_8u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgr_8u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgr_8u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgr_8u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgr_8u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgr_8u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGB_16u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgb_16u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgb_16u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgb_16u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgb_16u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgb_16u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgb_16u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgb_16u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgb_16u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgb_16u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgb_16u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgb_16u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgb_16u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgb_16u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgb_16u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgb_16u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgb_16u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgb_16u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgb_16u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgb_16u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgb_16u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgb_16u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgb_16u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgb_16u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgb_16u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgb_16u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgb_16u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgb_16u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgb_16u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgb_16u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgb_16u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgb_16u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgb_16u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgb_16u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgb_16u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgb_16u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgb_16u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgb_16u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgb_16u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgb_16u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgb_16u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgb_16u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgb_16u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgb_16u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgb_16u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgb_16u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgb_16u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgb_16u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgb_16u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgb_16u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgb_16u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgb_16u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgb_16u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgb_16u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgb_16u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgb_16u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgb_16u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgb_16u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgb_16u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgb_16u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgb_16u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgb_16u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGR_16u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgr_16u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgr_16u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgr_16u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgr_16u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgr_16u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgr_16u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgr_16u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgr_16u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgr_16u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgr_16u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgr_16u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgr_16u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgr_16u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgr_16u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgr_16u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgr_16u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgr_16u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgr_16u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgr_16u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgr_16u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgr_16u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgr_16u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgr_16u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgr_16u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgr_16u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgr_16u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgr_16u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgr_16u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgr_16u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgr_16u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgr_16u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgr_16u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgr_16u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgr_16u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgr_16u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgr_16u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgr_16u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgr_16u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgr_16u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgr_16u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgr_16u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgr_16u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgr_16u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgr_16u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgr_16u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgr_16u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgr_16u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgr_16u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgr_16u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgr_16u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgr_16u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgr_16u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgr_16u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgr_16u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgr_16u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgr_16u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgr_16u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgr_16u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgr_16u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgr_16u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgr_16u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGB_16f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgb_16f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgb_16f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgb_16f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgb_16f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgb_16f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgb_16f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgb_16f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgb_16f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgb_16f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgb_16f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgb_16f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgb_16f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgb_16f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgb_16f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgb_16f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgb_16f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgb_16f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgb_16f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgb_16f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgb_16f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgb_16f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgb_16f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgb_16f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgb_16f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgb_16f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgb_16f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgb_16f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgb_16f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgb_16f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgb_16f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgb_16f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgb_16f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgb_16f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgb_16f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgb_16f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgb_16f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgb_16f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgb_16f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgb_16f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgb_16f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgb_16f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgb_16f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgb_16f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgb_16f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgb_16f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgb_16f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgb_16f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgb_16f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgb_16f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgb_16f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgb_16f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgb_16f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgb_16f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgb_16f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgb_16f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgb_16f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgb_16f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgb_16f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgb_16f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgb_16f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgb_16f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGR_16f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgr_16f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgr_16f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgr_16f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgr_16f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgr_16f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgr_16f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgr_16f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgr_16f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgr_16f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgr_16f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgr_16f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgr_16f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgr_16f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgr_16f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgr_16f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgr_16f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgr_16f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgr_16f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgr_16f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgr_16f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgr_16f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgr_16f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgr_16f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgr_16f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgr_16f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgr_16f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgr_16f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgr_16f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgr_16f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgr_16f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgr_16f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgr_16f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgr_16f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgr_16f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgr_16f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgr_16f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgr_16f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgr_16f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgr_16f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgr_16f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgr_16f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgr_16f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgr_16f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgr_16f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgr_16f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgr_16f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgr_16f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgr_16f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgr_16f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgr_16f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgr_16f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgr_16f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgr_16f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgr_16f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgr_16f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgr_16f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgr_16f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgr_16f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgr_16f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgr_16f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgr_16f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGB_32u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgb_32u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgb_32u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgb_32u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgb_32u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgb_32u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgb_32u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgb_32u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgb_32u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgb_32u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgb_32u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgb_32u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgb_32u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgb_32u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgb_32u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgb_32u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgb_32u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgb_32u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgb_32u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgb_32u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgb_32u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgb_32u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgb_32u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgb_32u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgb_32u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgb_32u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgb_32u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgb_32u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgb_32u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgb_32u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgb_32u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgb_32u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgb_32u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgb_32u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgb_32u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgb_32u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgb_32u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgb_32u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgb_32u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgb_32u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgb_32u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgb_32u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgb_32u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgb_32u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgb_32u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgb_32u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgb_32u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgb_32u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgb_32u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgb_32u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgb_32u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgb_32u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgb_32u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgb_32u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgb_32u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgb_32u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgb_32u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgb_32u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgb_32u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgb_32u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgb_32u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgb_32u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGR_32u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgr_32u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgr_32u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgr_32u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgr_32u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgr_32u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgr_32u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgr_32u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgr_32u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgr_32u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgr_32u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgr_32u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgr_32u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgr_32u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgr_32u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgr_32u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgr_32u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgr_32u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgr_32u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgr_32u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgr_32u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgr_32u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgr_32u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgr_32u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgr_32u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgr_32u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgr_32u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgr_32u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgr_32u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgr_32u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgr_32u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgr_32u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgr_32u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgr_32u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgr_32u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgr_32u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgr_32u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgr_32u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgr_32u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgr_32u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgr_32u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgr_32u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgr_32u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgr_32u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgr_32u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgr_32u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgr_32u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgr_32u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgr_32u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgr_32u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgr_32u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgr_32u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgr_32u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgr_32u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgr_32u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgr_32u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgr_32u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgr_32u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgr_32u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgr_32u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgr_32u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgr_32u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGB_32f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgb_32f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgb_32f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgb_32f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgb_32f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgb_32f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgb_32f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgb_32f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgb_32f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgb_32f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgb_32f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgb_32f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgb_32f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgb_32f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgb_32f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgb_32f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgb_32f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgb_32f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgb_32f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgb_32f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgb_32f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgb_32f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgb_32f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgb_32f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgb_32f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgb_32f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgb_32f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgb_32f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgb_32f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgb_32f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgb_32f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgb_32f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgb_32f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgb_32f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgb_32f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgb_32f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgb_32f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgb_32f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgb_32f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgb_32f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgb_32f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgb_32f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgb_32f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgb_32f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgb_32f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgb_32f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgb_32f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgb_32f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgb_32f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgb_32f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgb_32f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgb_32f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgb_32f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgb_32f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgb_32f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgb_32f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgb_32f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgb_32f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgb_32f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgb_32f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgb_32f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgb_32f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGR_32f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgr_32f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgr_32f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgr_32f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgr_32f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgr_32f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgr_32f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgr_32f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgr_32f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgr_32f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgr_32f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgr_32f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgr_32f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgr_32f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgr_32f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgr_32f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgr_32f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgr_32f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgr_32f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgr_32f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgr_32f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgr_32f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgr_32f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgr_32f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgr_32f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgr_32f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgr_32f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgr_32f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgr_32f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgr_32f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgr_32f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgr_32f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgr_32f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgr_32f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgr_32f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgr_32f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgr_32f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgr_32f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgr_32f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgr_32f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgr_32f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgr_32f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgr_32f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgr_32f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgr_32f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgr_32f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgr_32f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgr_32f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgr_32f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgr_32f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgr_32f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgr_32f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgr_32f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgr_32f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgr_32f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgr_32f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgr_32f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgr_32f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgr_32f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgr_32f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgr_32f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgr_32f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGBA_8u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgba_8u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgba_8u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgba_8u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgba_8u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgba_8u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgba_8u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgba_8u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgba_8u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgba_8u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgba_8u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgba_8u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgba_8u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgba_8u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgba_8u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgba_8u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgba_8u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgba_8u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgba_8u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgba_8u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgba_8u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgba_8u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgba_8u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgba_8u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgba_8u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgba_8u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgba_8u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgba_8u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgba_8u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgba_8u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgba_8u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgba_8u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgba_8u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgba_8u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgba_8u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgba_8u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgba_8u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgba_8u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgba_8u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgba_8u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgba_8u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgba_8u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgba_8u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgba_8u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgba_8u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgba_8u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgba_8u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgba_8u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgba_8u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgba_8u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgba_8u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgba_8u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgba_8u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgba_8u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgba_8u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgba_8u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgba_8u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgba_8u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgba_8u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgba_8u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgba_8u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgba_8u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ARGB_8u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((argb_8u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((argb_8u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((argb_8u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((argb_8u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((argb_8u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((argb_8u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((argb_8u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((argb_8u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((argb_8u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((argb_8u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((argb_8u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((argb_8u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((argb_8u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((argb_8u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((argb_8u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((argb_8u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((argb_8u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((argb_8u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((argb_8u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((argb_8u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((argb_8u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((argb_8u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((argb_8u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((argb_8u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((argb_8u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((argb_8u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((argb_8u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((argb_8u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((argb_8u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((argb_8u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((argb_8u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((argb_8u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((argb_8u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((argb_8u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((argb_8u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((argb_8u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((argb_8u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((argb_8u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((argb_8u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((argb_8u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((argb_8u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((argb_8u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((argb_8u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((argb_8u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((argb_8u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((argb_8u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((argb_8u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((argb_8u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((argb_8u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((argb_8u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((argb_8u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((argb_8u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((argb_8u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((argb_8u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((argb_8u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((argb_8u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((argb_8u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((argb_8u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((argb_8u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((argb_8u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((argb_8u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGRA_8u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgra_8u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgra_8u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgra_8u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgra_8u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgra_8u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgra_8u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgra_8u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgra_8u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgra_8u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgra_8u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgra_8u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgra_8u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgra_8u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgra_8u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgra_8u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgra_8u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgra_8u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgra_8u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgra_8u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgra_8u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgra_8u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgra_8u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgra_8u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgra_8u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgra_8u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgra_8u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgra_8u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgra_8u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgra_8u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgra_8u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgra_8u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgra_8u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgra_8u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgra_8u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgra_8u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgra_8u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgra_8u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgra_8u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgra_8u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgra_8u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgra_8u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgra_8u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgra_8u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgra_8u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgra_8u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgra_8u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgra_8u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgra_8u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgra_8u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgra_8u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgra_8u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgra_8u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgra_8u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgra_8u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgra_8u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgra_8u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgra_8u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgra_8u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgra_8u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgra_8u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgra_8u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ABGR_8u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((abgr_8u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((abgr_8u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((abgr_8u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((abgr_8u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((abgr_8u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((abgr_8u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((abgr_8u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((abgr_8u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((abgr_8u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((abgr_8u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((abgr_8u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((abgr_8u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((abgr_8u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((abgr_8u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((abgr_8u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((abgr_8u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((abgr_8u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((abgr_8u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((abgr_8u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((abgr_8u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((abgr_8u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((abgr_8u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((abgr_8u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((abgr_8u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((abgr_8u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((abgr_8u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((abgr_8u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((abgr_8u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((abgr_8u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((abgr_8u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((abgr_8u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((abgr_8u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((abgr_8u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((abgr_8u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((abgr_8u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((abgr_8u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((abgr_8u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((abgr_8u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((abgr_8u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((abgr_8u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((abgr_8u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((abgr_8u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((abgr_8u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((abgr_8u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((abgr_8u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((abgr_8u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((abgr_8u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((abgr_8u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((abgr_8u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((abgr_8u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((abgr_8u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((abgr_8u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((abgr_8u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((abgr_8u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((abgr_8u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((abgr_8u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((abgr_8u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((abgr_8u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((abgr_8u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((abgr_8u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((abgr_8u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGBA_16u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgba_16u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgba_16u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgba_16u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgba_16u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgba_16u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgba_16u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgba_16u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgba_16u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgba_16u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgba_16u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgba_16u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgba_16u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgba_16u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgba_16u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgba_16u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgba_16u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgba_16u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgba_16u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgba_16u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgba_16u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgba_16u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgba_16u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgba_16u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgba_16u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgba_16u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgba_16u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgba_16u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgba_16u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgba_16u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgba_16u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgba_16u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgba_16u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgba_16u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgba_16u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgba_16u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgba_16u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgba_16u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgba_16u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgba_16u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgba_16u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgba_16u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgba_16u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgba_16u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgba_16u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgba_16u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgba_16u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgba_16u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgba_16u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgba_16u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgba_16u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgba_16u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgba_16u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgba_16u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgba_16u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgba_16u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgba_16u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgba_16u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgba_16u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgba_16u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgba_16u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgba_16u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGRA_16u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgra_16u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgra_16u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgra_16u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgra_16u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgra_16u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgra_16u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgra_16u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgra_16u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgra_16u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgra_16u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgra_16u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgra_16u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgra_16u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgra_16u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgra_16u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgra_16u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgra_16u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgra_16u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgra_16u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgra_16u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgra_16u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgra_16u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgra_16u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgra_16u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgra_16u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgra_16u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgra_16u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgra_16u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgra_16u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgra_16u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgra_16u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgra_16u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgra_16u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgra_16u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgra_16u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgra_16u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgra_16u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgra_16u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgra_16u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgra_16u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgra_16u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgra_16u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgra_16u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgra_16u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgra_16u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgra_16u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgra_16u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgra_16u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgra_16u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgra_16u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgra_16u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgra_16u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgra_16u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgra_16u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgra_16u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgra_16u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgra_16u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgra_16u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgra_16u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgra_16u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgra_16u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ARGB_16u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((argb_16u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((argb_16u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((argb_16u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((argb_16u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((argb_16u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((argb_16u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((argb_16u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((argb_16u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((argb_16u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((argb_16u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((argb_16u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((argb_16u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((argb_16u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((argb_16u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((argb_16u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((argb_16u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((argb_16u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((argb_16u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((argb_16u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((argb_16u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((argb_16u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((argb_16u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((argb_16u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((argb_16u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((argb_16u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((argb_16u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((argb_16u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((argb_16u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((argb_16u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((argb_16u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((argb_16u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((argb_16u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((argb_16u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((argb_16u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((argb_16u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((argb_16u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((argb_16u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((argb_16u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((argb_16u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((argb_16u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((argb_16u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((argb_16u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((argb_16u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((argb_16u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((argb_16u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((argb_16u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((argb_16u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((argb_16u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((argb_16u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((argb_16u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((argb_16u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((argb_16u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((argb_16u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((argb_16u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((argb_16u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((argb_16u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((argb_16u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((argb_16u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((argb_16u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((argb_16u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((argb_16u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ABGR_16u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((abgr_16u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((abgr_16u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((abgr_16u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((abgr_16u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((abgr_16u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((abgr_16u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((abgr_16u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((abgr_16u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((abgr_16u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((abgr_16u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((abgr_16u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((abgr_16u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((abgr_16u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((abgr_16u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((abgr_16u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((abgr_16u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((abgr_16u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((abgr_16u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((abgr_16u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((abgr_16u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((abgr_16u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((abgr_16u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((abgr_16u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((abgr_16u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((abgr_16u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((abgr_16u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((abgr_16u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((abgr_16u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((abgr_16u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((abgr_16u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((abgr_16u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((abgr_16u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((abgr_16u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((abgr_16u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((abgr_16u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((abgr_16u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((abgr_16u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((abgr_16u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((abgr_16u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((abgr_16u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((abgr_16u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((abgr_16u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((abgr_16u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((abgr_16u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((abgr_16u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((abgr_16u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((abgr_16u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((abgr_16u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((abgr_16u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((abgr_16u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((abgr_16u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((abgr_16u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((abgr_16u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((abgr_16u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((abgr_16u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((abgr_16u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((abgr_16u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((abgr_16u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((abgr_16u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((abgr_16u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((abgr_16u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGBA_16f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgba_16f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgba_16f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgba_16f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgba_16f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgba_16f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgba_16f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgba_16f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgba_16f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgba_16f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgba_16f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgba_16f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgba_16f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgba_16f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgba_16f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgba_16f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgba_16f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgba_16f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgba_16f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgba_16f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgba_16f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgba_16f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgba_16f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgba_16f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgba_16f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgba_16f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgba_16f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgba_16f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgba_16f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgba_16f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgba_16f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgba_16f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgba_16f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgba_16f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgba_16f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgba_16f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgba_16f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgba_16f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgba_16f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgba_16f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgba_16f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgba_16f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgba_16f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgba_16f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgba_16f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgba_16f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgba_16f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgba_16f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgba_16f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgba_16f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgba_16f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgba_16f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgba_16f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgba_16f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgba_16f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgba_16f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgba_16f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgba_16f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgba_16f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgba_16f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgba_16f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgba_16f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGRA_16f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgra_16f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgra_16f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgra_16f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgra_16f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgra_16f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgra_16f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgra_16f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgra_16f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgra_16f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgra_16f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgra_16f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgra_16f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgra_16f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgra_16f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgra_16f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgra_16f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgra_16f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgra_16f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgra_16f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgra_16f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgra_16f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgra_16f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgra_16f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgra_16f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgra_16f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgra_16f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgra_16f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgra_16f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgra_16f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgra_16f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgra_16f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgra_16f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgra_16f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgra_16f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgra_16f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgra_16f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgra_16f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgra_16f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgra_16f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgra_16f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgra_16f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgra_16f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgra_16f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgra_16f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgra_16f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgra_16f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgra_16f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgra_16f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgra_16f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgra_16f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgra_16f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgra_16f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgra_16f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgra_16f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgra_16f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgra_16f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgra_16f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgra_16f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgra_16f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgra_16f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgra_16f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ARGB_16f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((argb_16f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((argb_16f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((argb_16f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((argb_16f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((argb_16f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((argb_16f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((argb_16f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((argb_16f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((argb_16f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((argb_16f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((argb_16f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((argb_16f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((argb_16f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((argb_16f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((argb_16f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((argb_16f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((argb_16f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((argb_16f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((argb_16f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((argb_16f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((argb_16f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((argb_16f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((argb_16f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((argb_16f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((argb_16f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((argb_16f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((argb_16f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((argb_16f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((argb_16f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((argb_16f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((argb_16f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((argb_16f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((argb_16f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((argb_16f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((argb_16f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((argb_16f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((argb_16f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((argb_16f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((argb_16f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((argb_16f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((argb_16f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((argb_16f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((argb_16f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((argb_16f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((argb_16f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((argb_16f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((argb_16f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((argb_16f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((argb_16f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((argb_16f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((argb_16f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((argb_16f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((argb_16f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((argb_16f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((argb_16f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((argb_16f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((argb_16f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((argb_16f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((argb_16f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((argb_16f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((argb_16f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ABGR_16f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((abgr_16f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((abgr_16f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((abgr_16f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((abgr_16f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((abgr_16f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((abgr_16f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((abgr_16f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((abgr_16f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((abgr_16f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((abgr_16f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((abgr_16f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((abgr_16f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((abgr_16f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((abgr_16f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((abgr_16f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((abgr_16f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((abgr_16f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((abgr_16f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((abgr_16f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((abgr_16f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((abgr_16f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((abgr_16f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((abgr_16f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((abgr_16f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((abgr_16f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((abgr_16f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((abgr_16f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((abgr_16f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((abgr_16f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((abgr_16f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((abgr_16f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((abgr_16f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((abgr_16f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((abgr_16f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((abgr_16f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((abgr_16f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((abgr_16f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((abgr_16f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((abgr_16f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((abgr_16f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((abgr_16f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((abgr_16f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((abgr_16f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((abgr_16f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((abgr_16f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((abgr_16f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((abgr_16f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((abgr_16f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((abgr_16f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((abgr_16f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((abgr_16f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((abgr_16f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((abgr_16f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((abgr_16f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((abgr_16f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((abgr_16f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((abgr_16f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((abgr_16f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((abgr_16f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((abgr_16f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((abgr_16f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGBA_32u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgba_32u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgba_32u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgba_32u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgba_32u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgba_32u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgba_32u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgba_32u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgba_32u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgba_32u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgba_32u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgba_32u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgba_32u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgba_32u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgba_32u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgba_32u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgba_32u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgba_32u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgba_32u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgba_32u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgba_32u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgba_32u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgba_32u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgba_32u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgba_32u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgba_32u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgba_32u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgba_32u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgba_32u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgba_32u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgba_32u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgba_32u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgba_32u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgba_32u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgba_32u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgba_32u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgba_32u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgba_32u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgba_32u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgba_32u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgba_32u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgba_32u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgba_32u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgba_32u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgba_32u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgba_32u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgba_32u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgba_32u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgba_32u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgba_32u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgba_32u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgba_32u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgba_32u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgba_32u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgba_32u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgba_32u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgba_32u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgba_32u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgba_32u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgba_32u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgba_32u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgba_32u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGRA_32u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgra_32u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgra_32u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgra_32u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgra_32u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgra_32u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgra_32u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgra_32u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgra_32u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgra_32u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgra_32u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgra_32u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgra_32u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgra_32u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgra_32u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgra_32u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgra_32u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgra_32u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgra_32u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgra_32u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgra_32u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgra_32u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgra_32u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgra_32u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgra_32u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgra_32u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgra_32u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgra_32u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgra_32u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgra_32u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgra_32u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgra_32u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgra_32u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgra_32u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgra_32u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgra_32u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgra_32u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgra_32u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgra_32u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgra_32u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgra_32u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgra_32u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgra_32u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgra_32u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgra_32u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgra_32u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgra_32u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgra_32u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgra_32u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgra_32u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgra_32u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgra_32u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgra_32u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgra_32u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgra_32u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgra_32u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgra_32u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgra_32u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgra_32u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgra_32u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgra_32u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgra_32u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ARGB_32u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((argb_32u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((argb_32u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((argb_32u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((argb_32u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((argb_32u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((argb_32u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((argb_32u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((argb_32u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((argb_32u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((argb_32u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((argb_32u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((argb_32u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((argb_32u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((argb_32u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((argb_32u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((argb_32u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((argb_32u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((argb_32u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((argb_32u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((argb_32u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((argb_32u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((argb_32u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((argb_32u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((argb_32u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((argb_32u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((argb_32u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((argb_32u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((argb_32u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((argb_32u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((argb_32u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((argb_32u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((argb_32u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((argb_32u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((argb_32u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((argb_32u*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((argb_32u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((argb_32u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((argb_32u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((argb_32u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((argb_32u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((argb_32u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((argb_32u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((argb_32u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((argb_32u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((argb_32u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((argb_32u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((argb_32u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((argb_32u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((argb_32u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((argb_32u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((argb_32u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((argb_32u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((argb_32u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((argb_32u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((argb_32u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((argb_32u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((argb_32u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((argb_32u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((argb_32u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((argb_32u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((argb_32u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ABGR_32u:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((abgr_32u*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((abgr_32u*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((abgr_32u*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((abgr_32u*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((abgr_32u*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((abgr_32u*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((abgr_32u*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((abgr_32u*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((abgr_32u*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((abgr_32u*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((abgr_32u*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((abgr_32u*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((abgr_32u*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((abgr_32u*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((abgr_32u*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((abgr_32u*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((abgr_32u*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((abgr_32u*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((abgr_32u*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((abgr_32u*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((abgr_32u*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((abgr_32u*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((abgr_32u*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((abgr_32u*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((abgr_32u*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((abgr_32u*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((abgr_32u*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((abgr_32u*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((abgr_32u*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((abgr_32u*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((abgr_32u*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((abgr_32u*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((abgr_32u*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((abgr_32u*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((abgr_32u*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((abgr_32u*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((abgr_32u*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((abgr_32u*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((abgr_32u*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((abgr_32u*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((abgr_32u*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((abgr_32u*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((abgr_32u*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((abgr_32u*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((abgr_32u*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((abgr_32u*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((abgr_32u*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((abgr_32u*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((abgr_32u*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((abgr_32u*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((abgr_32u*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((abgr_32u*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((abgr_32u*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((abgr_32u*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((abgr_32u*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((abgr_32u*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((abgr_32u*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((abgr_32u*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((abgr_32u*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((abgr_32u*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((abgr_32u*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGBA_32f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgba_32f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgba_32f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgba_32f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgba_32f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgba_32f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgba_32f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgba_32f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgba_32f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgba_32f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgba_32f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgba_32f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgba_32f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgba_32f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgba_32f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgba_32f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgba_32f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgba_32f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgba_32f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgba_32f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgba_32f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgba_32f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgba_32f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgba_32f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgba_32f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgba_32f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgba_32f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgba_32f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgba_32f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgba_32f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgba_32f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgba_32f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgba_32f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgba_32f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgba_32f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgba_32f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgba_32f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgba_32f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgba_32f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgba_32f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgba_32f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgba_32f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgba_32f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgba_32f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgba_32f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgba_32f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgba_32f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgba_32f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgba_32f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgba_32f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgba_32f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgba_32f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgba_32f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgba_32f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgba_32f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgba_32f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgba_32f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgba_32f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgba_32f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgba_32f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgba_32f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgba_32f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGRA_32f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgra_32f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgra_32f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgra_32f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgra_32f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgra_32f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgra_32f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgra_32f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgra_32f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgra_32f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgra_32f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgra_32f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgra_32f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgra_32f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgra_32f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgra_32f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgra_32f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgra_32f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgra_32f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgra_32f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgra_32f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgra_32f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgra_32f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgra_32f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgra_32f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgra_32f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgra_32f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgra_32f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgra_32f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgra_32f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgra_32f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgra_32f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgra_32f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgra_32f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgra_32f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgra_32f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgra_32f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgra_32f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgra_32f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgra_32f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgra_32f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgra_32f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgra_32f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgra_32f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgra_32f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgra_32f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgra_32f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgra_32f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgra_32f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgra_32f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgra_32f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgra_32f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgra_32f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgra_32f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgra_32f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgra_32f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgra_32f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgra_32f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgra_32f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgra_32f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgra_32f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgra_32f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ARGB_32f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((argb_32f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((argb_32f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((argb_32f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((argb_32f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((argb_32f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((argb_32f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((argb_32f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((argb_32f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((argb_32f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((argb_32f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((argb_32f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((argb_32f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((argb_32f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((argb_32f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((argb_32f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((argb_32f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((argb_32f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((argb_32f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((argb_32f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((argb_32f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((argb_32f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((argb_32f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((argb_32f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((argb_32f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((argb_32f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((argb_32f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((argb_32f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((argb_32f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((argb_32f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((argb_32f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((argb_32f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((argb_32f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((argb_32f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((argb_32f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((argb_32f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((argb_32f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((argb_32f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((argb_32f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((argb_32f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((argb_32f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((argb_32f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((argb_32f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((argb_32f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((argb_32f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((argb_32f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((argb_32f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((argb_32f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((argb_32f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((argb_32f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((argb_32f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((argb_32f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((argb_32f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((argb_32f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((argb_32f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((argb_32f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((argb_32f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((argb_32f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((argb_32f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((argb_32f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((argb_32f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((argb_32f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ABGR_32f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((abgr_32f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((abgr_32f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((abgr_32f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((abgr_32f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((abgr_32f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((abgr_32f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((abgr_32f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((abgr_32f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((abgr_32f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((abgr_32f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((abgr_32f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((abgr_32f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((abgr_32f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((abgr_32f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((abgr_32f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((abgr_32f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((abgr_32f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((abgr_32f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((abgr_32f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((abgr_32f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((abgr_32f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((abgr_32f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((abgr_32f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((abgr_32f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((abgr_32f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((abgr_32f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((abgr_32f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((abgr_32f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((abgr_32f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((abgr_32f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((abgr_32f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((abgr_32f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((abgr_32f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((abgr_32f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((abgr_32f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((abgr_32f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((abgr_32f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((abgr_32f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((abgr_32f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((abgr_32f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((abgr_32f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((abgr_32f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((abgr_32f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((abgr_32f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((abgr_32f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((abgr_32f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((abgr_32f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((abgr_32f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((abgr_32f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((abgr_32f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((abgr_32f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((abgr_32f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((abgr_32f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((abgr_32f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((abgr_32f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((abgr_32f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((abgr_32f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((abgr_32f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((abgr_32f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((abgr_32f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((abgr_32f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGBE_9995f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgb_9995f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgb_9995f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgb_9995f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgb_9995f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgb_9995f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgb_9995f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgb_9995f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgb_9995f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgb_9995f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgb_9995f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgb_9995f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgb_9995f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgb_9995f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgb_9995f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgb_9995f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgb_9995f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgb_9995f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgb_9995f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgb_9995f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgb_9995f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgb_9995f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgb_9995f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgb_9995f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgb_9995f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgb_9995f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgb_9995f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgb_9995f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgb_9995f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgb_9995f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgb_9995f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgb_9995f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgb_9995f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgb_9995f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgb_9995f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgb_9995f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgb_9995f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgb_9995f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgb_9995f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgb_9995f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgb_9995f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgb_9995f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgb_9995f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgb_9995f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgb_9995f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgb_9995f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgb_9995f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgb_9995f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgb_9995f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgb_9995f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgb_9995f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgb_9995f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgb_9995f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgb_9995f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgb_9995f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgb_9995f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgb_9995f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgb_9995f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgb_9995f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgb_9995f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgb_9995f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgb_9995f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ERGB_5999f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgr_5999f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgr_5999f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgr_5999f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgr_5999f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgr_5999f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgr_5999f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgr_5999f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgr_5999f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgr_5999f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgr_5999f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgr_5999f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgr_5999f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgr_5999f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgr_5999f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgr_5999f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgr_5999f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgr_5999f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgr_5999f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgr_5999f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgr_5999f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgr_5999f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgr_5999f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgr_5999f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgr_5999f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgr_5999f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgr_5999f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgr_5999f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgr_5999f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgr_5999f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgr_5999f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgr_5999f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgr_5999f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgr_5999f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgr_5999f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgr_5999f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgr_5999f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgr_5999f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgr_5999f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgr_5999f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgr_5999f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgr_5999f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgr_5999f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgr_5999f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgr_5999f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgr_5999f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgr_5999f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgr_5999f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgr_5999f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgr_5999f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgr_5999f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgr_5999f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgr_5999f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgr_5999f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgr_5999f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgr_5999f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgr_5999f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgr_5999f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgr_5999f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgr_5999f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgr_5999f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgr_5999f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGBA_10_10_10_2:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgba_10_10_10_2*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgba_10_10_10_2*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgba_10_10_10_2*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgba_10_10_10_2*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgba_10_10_10_2*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgba_10_10_10_2*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgba_10_10_10_2*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgba_10_10_10_2*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgba_10_10_10_2*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgba_10_10_10_2*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgba_10_10_10_2*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgba_10_10_10_2*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgba_10_10_10_2*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgba_10_10_10_2*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgba_10_10_10_2*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgba_10_10_10_2*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgba_10_10_10_2*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgba_10_10_10_2*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgba_10_10_10_2*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgba_10_10_10_2*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgba_10_10_10_2*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgba_10_10_10_2*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgba_10_10_10_2*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgba_10_10_10_2*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgba_10_10_10_2*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgba_10_10_10_2*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgba_10_10_10_2*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgba_10_10_10_2*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgba_10_10_10_2*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgba_10_10_10_2*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgba_10_10_10_2*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgba_10_10_10_2*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgba_10_10_10_2*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgba_10_10_10_2*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgba_10_10_10_2*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgba_10_10_10_2*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgba_10_10_10_2*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgba_10_10_10_2*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgba_10_10_10_2*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgba_10_10_10_2*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgba_10_10_10_2*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgba_10_10_10_2*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgba_10_10_10_2*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgba_10_10_10_2*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgba_10_10_10_2*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgba_10_10_10_2*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgba_10_10_10_2*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgba_10_10_10_2*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgba_10_10_10_2*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgba_10_10_10_2*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgba_10_10_10_2*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgba_10_10_10_2*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgba_10_10_10_2*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgba_10_10_10_2*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgba_10_10_10_2*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgba_10_10_10_2*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgba_10_10_10_2*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgba_10_10_10_2*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgba_10_10_10_2*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgba_10_10_10_2*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgba_10_10_10_2*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ABGR_2_10_10_10:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((abgr_2_10_10_10*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((abgr_2_10_10_10*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((abgr_2_10_10_10*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((abgr_2_10_10_10*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((abgr_2_10_10_10*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((abgr_2_10_10_10*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((abgr_2_10_10_10*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((abgr_2_10_10_10*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((abgr_2_10_10_10*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((abgr_2_10_10_10*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((abgr_2_10_10_10*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((abgr_2_10_10_10*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((abgr_2_10_10_10*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((abgr_2_10_10_10*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((abgr_2_10_10_10*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((abgr_2_10_10_10*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((abgr_2_10_10_10*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((abgr_2_10_10_10*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((abgr_2_10_10_10*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((abgr_2_10_10_10*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((abgr_2_10_10_10*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((abgr_2_10_10_10*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((abgr_2_10_10_10*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((abgr_2_10_10_10*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((abgr_2_10_10_10*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((abgr_2_10_10_10*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((abgr_2_10_10_10*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((abgr_2_10_10_10*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((abgr_2_10_10_10*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((abgr_2_10_10_10*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((abgr_2_10_10_10*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((abgr_2_10_10_10*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((abgr_2_10_10_10*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((abgr_2_10_10_10*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((abgr_2_10_10_10*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((abgr_2_10_10_10*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((abgr_2_10_10_10*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((abgr_2_10_10_10*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((abgr_2_10_10_10*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((abgr_2_10_10_10*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((abgr_2_10_10_10*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((abgr_2_10_10_10*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((abgr_2_10_10_10*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((abgr_2_10_10_10*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((abgr_2_10_10_10*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((abgr_2_10_10_10*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((abgr_2_10_10_10*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((abgr_2_10_10_10*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((abgr_2_10_10_10*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((abgr_2_10_10_10*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((abgr_2_10_10_10*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((abgr_2_10_10_10*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((abgr_2_10_10_10*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((abgr_2_10_10_10*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((abgr_2_10_10_10*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((abgr_2_10_10_10*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((abgr_2_10_10_10*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((abgr_2_10_10_10*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((abgr_2_10_10_10*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((abgr_2_10_10_10*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((abgr_2_10_10_10*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGB_11_11_10f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgb_11_11_10f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgb_11_11_10f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgb_11_11_10f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgb_11_11_10f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgb_11_11_10f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgb_11_11_10f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgb_11_11_10f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgb_11_11_10f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgb_11_11_10f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgb_11_11_10f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgb_11_11_10f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgb_11_11_10f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgb_11_11_10f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgb_11_11_10f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgb_11_11_10f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgb_11_11_10f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgb_11_11_10f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgb_11_11_10f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgb_11_11_10f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgb_11_11_10f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgb_11_11_10f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgb_11_11_10f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgb_11_11_10f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgb_11_11_10f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgb_11_11_10f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgb_11_11_10f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgb_11_11_10f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgb_11_11_10f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgb_11_11_10f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgb_11_11_10f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgb_11_11_10f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgb_11_11_10f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgb_11_11_10f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgb_11_11_10f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgb_11_11_10f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgb_11_11_10f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgb_11_11_10f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgb_11_11_10f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgb_11_11_10f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgb_11_11_10f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgb_11_11_10f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgb_11_11_10f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgb_11_11_10f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgb_11_11_10f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgb_11_11_10f*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgb_11_11_10f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgb_11_11_10f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgb_11_11_10f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgb_11_11_10f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgb_11_11_10f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgb_11_11_10f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgb_11_11_10f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgb_11_11_10f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgb_11_11_10f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgb_11_11_10f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgb_11_11_10f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgb_11_11_10f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgb_11_11_10f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgb_11_11_10f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgb_11_11_10f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgb_11_11_10f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGR_10_11_11f:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgr_10_11_11f*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgr_10_11_11f*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgr_10_11_11f*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgr_10_11_11f*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgr_10_11_11f*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgr_10_11_11f*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgr_10_11_11f*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgr_10_11_11f*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgr_10_11_11f*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgr_10_11_11f*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgr_10_11_11f*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgr_10_11_11f*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgr_10_11_11f*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgr_10_11_11f*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgr_10_11_11f*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgr_10_11_11f*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgr_10_11_11f*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgr_10_11_11f*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgr_10_11_11f*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgr_10_11_11f*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgr_10_11_11f*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgr_10_11_11f*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgr_10_11_11f*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgr_10_11_11f*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgr_10_11_11f*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgr_10_11_11f*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgr_10_11_11f*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgr_10_11_11f*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgr_10_11_11f*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgr_10_11_11f*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgr_10_11_11f*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgr_10_11_11f*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgr_10_11_11f*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgr_10_11_11f*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgr_10_11_11f*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgr_10_11_11f*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgr_10_11_11f*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgr_10_11_11f*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgr_10_11_11f*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgr_10_11_11f*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgr_10_11_11f*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgr_10_11_11f*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgr_10_11_11f*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgr_10_11_11f*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgr_10_11_11f*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgr_10_11_11f*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgr_10_11_11f*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgr_10_11_11f*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgr_10_11_11f*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgr_10_11_11f*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgr_10_11_11f*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgr_10_11_11f*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgr_10_11_11f*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgr_10_11_11f*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgr_10_11_11f*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgr_10_11_11f*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgr_10_11_11f*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgr_10_11_11f*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgr_10_11_11f*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgr_10_11_11f*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgr_10_11_11f*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_DS_24_8:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rg_24_8*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rg_24_8*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rg_24_8*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rg_24_8*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rg_24_8*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rg_24_8*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rg_24_8*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rg_24_8*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rg_24_8*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rg_24_8*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rg_24_8*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rg_24_8*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rg_24_8*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rg_24_8*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rg_24_8*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rg_24_8*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rg_24_8*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rg_24_8*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rg_24_8*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rg_24_8*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rg_24_8*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rg_24_8*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rg_24_8*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rg_24_8*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rg_24_8*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rg_24_8*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rg_24_8*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rg_24_8*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rg_24_8*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rg_24_8*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rg_24_8*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rg_24_8*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rg_24_8*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rg_24_8*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rg_24_8*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rg_24_8*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rg_24_8*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rg_24_8*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rg_24_8*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rg_24_8*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rg_24_8*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rg_24_8*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rg_24_8*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rg_24_8*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rg_24_8*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rg_24_8*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rg_24_8*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rg_24_8*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rg_24_8*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rg_24_8*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rg_24_8*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rg_24_8*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rg_24_8*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rg_24_8*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rg_24_8*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rg_24_8*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rg_24_8*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rg_24_8*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rg_24_8*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rg_24_8*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rg_24_8*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_LA_4:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rg_4*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rg_4*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rg_4*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rg_4*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rg_4*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rg_4*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rg_4*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rg_4*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rg_4*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rg_4*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rg_4*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rg_4*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rg_4*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rg_4*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rg_4*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rg_4*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rg_4*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rg_4*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rg_4*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rg_4*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rg_4*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rg_4*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rg_4*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rg_4*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rg_4*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rg_4*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rg_4*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rg_4*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rg_4*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rg_4*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rg_4*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rg_4*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rg_4*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rg_4*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rg_4*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rg_4*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rg_4*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rg_4*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rg_4*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rg_4*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rg_4*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rg_4*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rg_4*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rg_4*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rg_4*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rg_4*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rg_4*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rg_4*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rg_4*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rg_4*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rg_4*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rg_4*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rg_4*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rg_4*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rg_4*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rg_4*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rg_4*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rg_4*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rg_4*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rg_4*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rg_4*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGB_332:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgb_332*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgb_332*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgb_332*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgb_332*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgb_332*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgb_332*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgb_332*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgb_332*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgb_332*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgb_332*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgb_332*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgb_332*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgb_332*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgb_332*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgb_332*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgb_332*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgb_332*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgb_332*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgb_332*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgb_332*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgb_332*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgb_332*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgb_332*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgb_332*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgb_332*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgb_332*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgb_332*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgb_332*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgb_332*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgb_332*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgb_332*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgb_332*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgb_332*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgb_332*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgb_332*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgb_332*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgb_332*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgb_332*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgb_332*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgb_332*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgb_332*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgb_332*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgb_332*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgb_332*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgb_332*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgb_332*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgb_332*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgb_332*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgb_332*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgb_332*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgb_332*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgb_332*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgb_332*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgb_332*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgb_332*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgb_332*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgb_332*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgb_332*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgb_332*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgb_332*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgb_332*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGR_233:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgr_233*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgr_233*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgr_233*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgr_233*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgr_233*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgr_233*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgr_233*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgr_233*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgr_233*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgr_233*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgr_233*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgr_233*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgr_233*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgr_233*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgr_233*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgr_233*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgr_233*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgr_233*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgr_233*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgr_233*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgr_233*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgr_233*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgr_233*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgr_233*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgr_233*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgr_233*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgr_233*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgr_233*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgr_233*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgr_233*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgr_233*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgr_233*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgr_233*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgr_233*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgr_233*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgr_233*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgr_233*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgr_233*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgr_233*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgr_233*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgr_233*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgr_233*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgr_233*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgr_233*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgr_233*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgr_233*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgr_233*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgr_233*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgr_233*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgr_233*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgr_233*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgr_233*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgr_233*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgr_233*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgr_233*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgr_233*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgr_233*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgr_233*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgr_233*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgr_233*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgr_233*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGB_422:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgb_422*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgb_422*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgb_422*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgb_422*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgb_422*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgb_422*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgb_422*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgb_422*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgb_422*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgb_422*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgb_422*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgb_422*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgb_422*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgb_422*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgb_422*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgb_422*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgb_422*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgb_422*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgb_422*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgb_422*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgb_422*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgb_422*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgb_422*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgb_422*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgb_422*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgb_422*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgb_422*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgb_422*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgb_422*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgb_422*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgb_422*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgb_422*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgb_422*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgb_422*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgb_422*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgb_422*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgb_422*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgb_422*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgb_422*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgb_422*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgb_422*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgb_422*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgb_422*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgb_422*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgb_422*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgb_422*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgb_422*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgb_422*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgb_422*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgb_422*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgb_422*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgb_422*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgb_422*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgb_422*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgb_422*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgb_422*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgb_422*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgb_422*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgb_422*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgb_422*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgb_422*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGR_224:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgr_224*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgr_224*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgr_224*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgr_224*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgr_224*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgr_224*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgr_224*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgr_224*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgr_224*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgr_224*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgr_224*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgr_224*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgr_224*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgr_224*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgr_224*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgr_224*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgr_224*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgr_224*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgr_224*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgr_224*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgr_224*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgr_224*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgr_224*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgr_224*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgr_224*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgr_224*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgr_224*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgr_224*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgr_224*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgr_224*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgr_224*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgr_224*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgr_224*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgr_224*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgr_224*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgr_224*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgr_224*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgr_224*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgr_224*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgr_224*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgr_224*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgr_224*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgr_224*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgr_224*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgr_224*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgr_224*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgr_224*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgr_224*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgr_224*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgr_224*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgr_224*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgr_224*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgr_224*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgr_224*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgr_224*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgr_224*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgr_224*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgr_224*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgr_224*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgr_224*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgr_224*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGB_565:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgb_565*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgb_565*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgb_565*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgb_565*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgb_565*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgb_565*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgb_565*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgb_565*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgb_565*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgb_565*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgb_565*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgb_565*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgb_565*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgb_565*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgb_565*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgb_565*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgb_565*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgb_565*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgb_565*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgb_565*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgb_565*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgb_565*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgb_565*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgb_565*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgb_565*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgb_565*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgb_565*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgb_565*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgb_565*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgb_565*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgb_565*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgb_565*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgb_565*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgb_565*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgb_565*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgb_565*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgb_565*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgb_565*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgb_565*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgb_565*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgb_565*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgb_565*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgb_565*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgb_565*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgb_565*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgb_565*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgb_565*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgb_565*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgb_565*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgb_565*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgb_565*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgb_565*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgb_565*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgb_565*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgb_565*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgb_565*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgb_565*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgb_565*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgb_565*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgb_565*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgb_565*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGR_565:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgr_565*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgr_565*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgr_565*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgr_565*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgr_565*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgr_565*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgr_565*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgr_565*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgr_565*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgr_565*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgr_565*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgr_565*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgr_565*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgr_565*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgr_565*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgr_565*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgr_565*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgr_565*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgr_565*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgr_565*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgr_565*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgr_565*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgr_565*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgr_565*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgr_565*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgr_565*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgr_565*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgr_565*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgr_565*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgr_565*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgr_565*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgr_565*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgr_565*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgr_565*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgr_565*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgr_565*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgr_565*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgr_565*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgr_565*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgr_565*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgr_565*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgr_565*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgr_565*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgr_565*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgr_565*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgr_565*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgr_565*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgr_565*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgr_565*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgr_565*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgr_565*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgr_565*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgr_565*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgr_565*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgr_565*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgr_565*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgr_565*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgr_565*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgr_565*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgr_565*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgr_565*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGBA_5551:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgba_5551*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgba_5551*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgba_5551*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgba_5551*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgba_5551*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgba_5551*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgba_5551*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgba_5551*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgba_5551*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgba_5551*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgba_5551*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgba_5551*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgba_5551*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgba_5551*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgba_5551*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgba_5551*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgba_5551*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgba_5551*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgba_5551*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgba_5551*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgba_5551*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgba_5551*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgba_5551*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgba_5551*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgba_5551*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgba_5551*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgba_5551*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgba_5551*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgba_5551*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgba_5551*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgba_5551*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgba_5551*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgba_5551*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgba_5551*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgba_5551*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgba_5551*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgba_5551*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgba_5551*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgba_5551*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgba_5551*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgba_5551*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgba_5551*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgba_5551*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgba_5551*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgba_5551*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgba_5551*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgba_5551*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgba_5551*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgba_5551*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgba_5551*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgba_5551*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgba_5551*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgba_5551*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgba_5551*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgba_5551*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgba_5551*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgba_5551*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((rgba_5551*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgba_5551*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgba_5551*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgba_5551*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ARGB_1555:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((argb_1555*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((argb_1555*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((argb_1555*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((argb_1555*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((argb_1555*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((argb_1555*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((argb_1555*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((argb_1555*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((argb_1555*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((argb_1555*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((argb_1555*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((argb_1555*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((argb_1555*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((argb_1555*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((argb_1555*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((argb_1555*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((argb_1555*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((argb_1555*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((argb_1555*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((argb_1555*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((argb_1555*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((argb_1555*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((argb_1555*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((argb_1555*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((argb_1555*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((argb_1555*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((argb_1555*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((argb_1555*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((argb_1555*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((argb_1555*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((argb_1555*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((argb_1555*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((argb_1555*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((argb_1555*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((argb_1555*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((argb_1555*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((argb_1555*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((argb_1555*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((argb_1555*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((argb_1555*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((argb_1555*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((argb_1555*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((argb_1555*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((argb_1555*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((argb_1555*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((argb_1555*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((argb_1555*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((argb_1555*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((argb_1555*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((argb_1555*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((argb_1555*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((argb_1555*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((argb_1555*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((argb_1555*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((argb_1555*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((argb_1555*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((argb_1555*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((argb_1555*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((argb_1555*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((argb_1555*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((argb_1555*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGRA_5551:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgra_5551*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgra_5551*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgra_5551*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgra_5551*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgra_5551*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgra_5551*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgra_5551*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgra_5551*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgra_5551*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgra_5551*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgra_5551*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgra_5551*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgra_5551*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgra_5551*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgra_5551*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgra_5551*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgra_5551*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgra_5551*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgra_5551*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgra_5551*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgra_5551*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgra_5551*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgra_5551*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgra_5551*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgra_5551*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgra_5551*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgra_5551*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgra_5551*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgra_5551*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgra_5551*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgra_5551*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgra_5551*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgra_5551*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgra_5551*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgra_5551*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgra_5551*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgra_5551*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgra_5551*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgra_5551*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgra_5551*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgra_5551*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgra_5551*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgra_5551*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgra_5551*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgra_5551*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgra_5551*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgra_5551*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgra_5551*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgra_5551*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgra_5551*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgra_5551*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgra_5551*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgra_5551*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgra_5551*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgra_5551*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgra_5551*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgra_5551*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgra_5551*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgra_5551*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((bgra_5551*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgra_5551*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ABGR_1555:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((abgr_1555*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((abgr_1555*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((abgr_1555*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((abgr_1555*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((abgr_1555*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((abgr_1555*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((abgr_1555*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((abgr_1555*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((abgr_1555*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((abgr_1555*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((abgr_1555*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((abgr_1555*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((abgr_1555*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((abgr_1555*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((abgr_1555*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((abgr_1555*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((abgr_1555*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((abgr_1555*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((abgr_1555*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((abgr_1555*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((abgr_1555*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((abgr_1555*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((abgr_1555*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((abgr_1555*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((abgr_1555*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((abgr_1555*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((abgr_1555*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((abgr_1555*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((abgr_1555*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((abgr_1555*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((abgr_1555*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((abgr_1555*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((abgr_1555*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((abgr_1555*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((abgr_1555*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((abgr_1555*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((abgr_1555*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((abgr_1555*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((abgr_1555*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((abgr_1555*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((abgr_1555*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((abgr_1555*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((abgr_1555*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((abgr_1555*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((abgr_1555*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((abgr_1555*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((abgr_1555*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((abgr_1555*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((abgr_1555*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((abgr_1555*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((abgr_1555*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((abgr_1555*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((abgr_1555*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((abgr_1555*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((abgr_1555*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((abgr_1555*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((abgr_1555*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((abgr_1555*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((abgr_1555*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((abgr_1555*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((abgr_1555*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_RGBA_4:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((rgba_4*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((rgba_4*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((rgba_4*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((rgba_4*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((rgba_4*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((rgba_4*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((rgba_4*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((rgba_4*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((rgba_4*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((rgba_4*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((rgba_4*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((rgba_4*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((rgba_4*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((rgba_4*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((rgba_4*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((rgba_4*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((rgba_4*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((rgba_4*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((rgba_4*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((rgba_4*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((rgba_4*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((rgba_4*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((rgba_4*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((rgba_4*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((rgba_4*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((rgba_4*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((rgba_4*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((rgba_4*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((rgba_4*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((rgba_4*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((rgba_4*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((rgba_4*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((rgba_4*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((rgba_4*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((rgba_4*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((rgba_4*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((rgba_4*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((rgba_4*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((rgba_4*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((rgba_4*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((rgba_4*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((rgba_4*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((rgba_4*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((rgba_4*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((rgba_4*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((rgba_4*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((rgba_4*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((rgba_4*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((rgba_4*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((rgba_4*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((rgba_4*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((rgba_4*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((rgba_4*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((rgba_4*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((rgba_4*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((rgba_4*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((rgba_4*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((rgba_4*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((rgba_4*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((rgba_4*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((rgba_4*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ARGB_4:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((argb_4*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((argb_4*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((argb_4*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((argb_4*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((argb_4*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((argb_4*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((argb_4*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((argb_4*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((argb_4*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((argb_4*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((argb_4*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((argb_4*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((argb_4*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((argb_4*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((argb_4*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((argb_4*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((argb_4*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((argb_4*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((argb_4*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((argb_4*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((argb_4*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((argb_4*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((argb_4*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((argb_4*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((argb_4*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((argb_4*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((argb_4*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((argb_4*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((argb_4*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((argb_4*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((argb_4*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((argb_4*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((argb_4*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((argb_4*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((argb_4*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((argb_4*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((argb_4*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((argb_4*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((argb_4*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((argb_4*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((argb_4*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((argb_4*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((argb_4*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((argb_4*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((argb_4*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((argb_4*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((argb_4*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((argb_4*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((argb_4*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((argb_4*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((argb_4*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((argb_4*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((argb_4*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((argb_4*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((argb_4*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((argb_4*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((argb_4*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((argb_4*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((argb_4*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((argb_4*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((argb_4*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_BGRA_4:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((bgra_4*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((bgra_4*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((bgra_4*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((bgra_4*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((bgra_4*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((bgra_4*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((bgra_4*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((bgra_4*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((bgra_4*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((bgra_4*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((bgra_4*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((bgra_4*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((bgra_4*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((bgra_4*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((bgra_4*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((bgra_4*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((bgra_4*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((bgra_4*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((bgra_4*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((bgra_4*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((bgra_4*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((bgra_4*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((bgra_4*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((bgra_4*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((bgra_4*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((bgra_4*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((bgra_4*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((bgra_4*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((bgra_4*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((bgra_4*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((bgra_4*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((bgra_4*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((bgra_4*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((bgra_4*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((bgra_4*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((bgra_4*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((bgra_4*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((bgra_4*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((bgra_4*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((bgra_4*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((bgra_4*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((bgra_4*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((bgra_4*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((bgra_4*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((bgra_4*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((bgra_4*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((bgra_4*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((bgra_4*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((bgra_4*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((bgra_4*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((bgra_4*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((bgra_4*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((bgra_4*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((bgra_4*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((bgra_4*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((bgra_4*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((bgra_4*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((bgra_4*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((bgra_4*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((bgra_4*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_4: 	return convert((bgra_4*) f, (abgr_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
		case imDF::DF_ABGR_4:
			switch(tf){
				case imDF::DF_L_8u: 	return convert((abgr_4*) f, (r_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16u: 	return convert((abgr_4*) f, (r_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_16f: 	return convert((abgr_4*) f, (r_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32u: 	return convert((abgr_4*) f, (r_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_L_32f: 	return convert((abgr_4*) f, (r_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_8u: 	return convert((abgr_4*) f, (rg_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16u: 	return convert((abgr_4*) f, (rg_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_16f: 	return convert((abgr_4*) f, (rg_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32u: 	return convert((abgr_4*) f, (rg_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_32f: 	return convert((abgr_4*) f, (rg_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_8u: 	return convert((abgr_4*) f, (rgb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_8u: 	return convert((abgr_4*) f, (bgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16u: 	return convert((abgr_4*) f, (rgb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16u: 	return convert((abgr_4*) f, (bgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_16f: 	return convert((abgr_4*) f, (rgb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_16f: 	return convert((abgr_4*) f, (bgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32u: 	return convert((abgr_4*) f, (rgb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32u: 	return convert((abgr_4*) f, (bgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_32f: 	return convert((abgr_4*) f, (rgb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_32f: 	return convert((abgr_4*) f, (bgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_8u: 	return convert((abgr_4*) f, (rgba_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_8u: 	return convert((abgr_4*) f, (argb_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_8u: 	return convert((abgr_4*) f, (bgra_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_8u: 	return convert((abgr_4*) f, (abgr_8u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16u: 	return convert((abgr_4*) f, (rgba_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16u: 	return convert((abgr_4*) f, (bgra_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16u: 	return convert((abgr_4*) f, (argb_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16u: 	return convert((abgr_4*) f, (abgr_16u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_16f: 	return convert((abgr_4*) f, (rgba_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_16f: 	return convert((abgr_4*) f, (bgra_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_16f: 	return convert((abgr_4*) f, (argb_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_16f: 	return convert((abgr_4*) f, (abgr_16f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32u: 	return convert((abgr_4*) f, (rgba_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32u: 	return convert((abgr_4*) f, (bgra_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32u: 	return convert((abgr_4*) f, (argb_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32u: 	return convert((abgr_4*) f, (abgr_32u**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_32f: 	return convert((abgr_4*) f, (rgba_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_32f: 	return convert((abgr_4*) f, (bgra_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_32f: 	return convert((abgr_4*) f, (argb_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_32f: 	return convert((abgr_4*) f, (abgr_32f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBE_9995f: 	return convert((abgr_4*) f, (rgb_9995f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ERGB_5999f: 	return convert((abgr_4*) f, (bgr_5999f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_10_10_10_2: 	return convert((abgr_4*) f, (rgba_10_10_10_2**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_2_10_10_10: 	return convert((abgr_4*) f, (abgr_2_10_10_10**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_11_11_10f: 	return convert((abgr_4*) f, (rgb_11_11_10f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_10_11_11f: 	return convert((abgr_4*) f, (bgr_10_11_11f**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_DS_24_8: 	return convert((abgr_4*) f, (rg_24_8**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_LA_4: 	return convert((abgr_4*) f, (rg_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_332: 	return convert((abgr_4*) f, (rgb_332**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_233: 	return convert((abgr_4*) f, (bgr_233**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_422: 	return convert((abgr_4*) f, (rgb_422**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_224: 	return convert((abgr_4*) f, (bgr_224**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGB_565: 	return convert((abgr_4*) f, (rgb_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGR_565: 	return convert((abgr_4*) f, (bgr_565**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_5551: 	return convert((abgr_4*) f, (rgba_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_1555: 	return convert((abgr_4*) f, (argb_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_5551: 	return convert((abgr_4*) f, (bgra_5551**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ABGR_1555: 	return convert((abgr_4*) f, (abgr_1555**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_RGBA_4: 	return convert((abgr_4*) f, (rgba_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_ARGB_4: 	return convert((abgr_4*) f, (argb_4**) t, numPixels, datasize, spp, bpp);
				case imDF::DF_BGRA_4: 	return convert((abgr_4*) f, (bgra_4**) t, numPixels, datasize, spp, bpp);
				default: return 0;
			};
